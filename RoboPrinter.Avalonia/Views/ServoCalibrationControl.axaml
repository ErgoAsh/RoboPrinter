<reactiveUi:ReactiveUserControl xmlns="https://github.com/avaloniaui"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                xmlns:reactiveUi="http://reactiveui.net"
                                xmlns:viewModels="clr-namespace:RoboPrinter.Core.ViewModels;assembly=RoboPrinter.Core"
                                xmlns:views="clr-namespace:RoboPrinter.Avalonia.Views"
                                mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
                                x:Class="RoboPrinter.Avalonia.Views.ServoCalibrationControl"
                                x:TypeArguments="viewModels:ServoTestViewModel">
    <reactiveUi:ReactiveUserControl.Styles>
        <Style Selector="DataGridCell.Centered">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </reactiveUi:ReactiveUserControl.Styles>
    <Grid ColumnDefinitions="*,*" RowDefinitions="Auto,Auto,*,Auto">
        <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"
                BorderThickness="1" BorderBrush="#222222">
            <DataGrid Name="TableGrid" IsReadOnly="False" CanUserSortColumns="False"
                      RowHeight="75" AlternatingRowBackground="#222222">
								<DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}"
                                        Width="*" IsReadOnly="True"
                                        CellStyleClasses="Centered">
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="d" Binding="{Binding ZOffset}"
                                        Width="*"
                                        CellStyleClasses="Centered">
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="r" Binding="{Binding XOffset}"
                                        Width="*"
                                        CellStyleClasses="Centered" >
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="θ" Binding="{Binding ZAngle}"
                                        Width="*"
                                        CellStyleClasses="Centered" >
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="α₀" Binding="{Binding XAngle}"
                                        Width="*"
                                        CellStyleClasses="Centered" >

                    </DataGridTextColumn>

                    <DataGridTemplateColumn Header="α" Width="3*">
												<DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Name="SliderPanel" RowDefinitions="45,*" ColumnDefinitions="*,*,*">
                                    <!-- TODO add option to disable slider if currently printing -->
                                    <Slider Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" 
                                            Minimum="{Binding MinPositionConstraint}" 
                                            Maximum="{Binding MaxPositionConstraint}"
                                            Value="{Binding Position, Mode=TwoWay}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom"
                                            Margin="0" Padding="0" />

                                     <Button Grid.Row="1" Grid.Column="0" 
                                             HorizontalAlignment="Left" VerticalAlignment="Top" 
                                             Height="22" Width="35" HorizontalContentAlignment="Center"
                                             Command="{Binding DataContext.DecrementCommand,
																											 RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                             CommandParameter="{Binding Id}">
																				 <TextBlock FontSize="9">-1</TextBlock>
                                     </Button>

                                     <TextBlock Grid.Row="1" Grid.Column="1"
																							  Text="{Binding Position, StringFormat={}{0:F3}}"
                                                HorizontalAlignment="Center" FontSize="12"
                                                VerticalAlignment="Top" />

                                     <Button Grid.Row="1" Grid.Column="2"
																						 HorizontalAlignment="Right" VerticalAlignment="Top" 
																						 Height="22" Width="35" HorizontalContentAlignment="Center"
																						 Command="{Binding DataContext.IncrementCommand,
																											 RelativeSource={RelativeSource AncestorType=DataGrid}}"
																						 CommandParameter="{Binding Id}">
																				 <TextBlock FontSize="9">+1</TextBlock>
                                     </Button>
																	</Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="α min" Binding="{Binding MinPositionConstraint}"
                                        Width="*"
                                        CellStyleClasses="Centered" >
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="α max" Binding="{Binding MaxPositionConstraint}"
                                        Width="*"
                                        CellStyleClasses="Centered" >
                    </DataGridTextColumn>

										<DataGridTextColumn Header="τ min" Binding="{Binding MinPulseWidth}"
										                    Width="*"
										                    CellStyleClasses="Centered" >
										</DataGridTextColumn>

										<DataGridTextColumn Header="τ max" Binding="{Binding MaxPulseWidth}"
										                    Width="*"
										                    CellStyleClasses="Centered" >
										</DataGridTextColumn>

										<DataGridTextColumn Header="τ(t)" Binding="{Binding InstantaneousPulseWidth}"
										                    Width="*"
										                    CellStyleClasses="Centered" >
										</DataGridTextColumn>

										<DataGridTextColumn Header="V min" Binding="{Binding MinVoltage}"
									                    Width="*"
									                    CellStyleClasses="Centered" >
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="V max" Binding="{Binding MaxVoltage}"
                                        Width="*"
                                        CellStyleClasses="Centered" >
                    </DataGridTextColumn>

										<DataGridTextColumn Header="V(t)" Binding="{Binding InstantaneousVoltage}"
										                    Width="*" IsReadOnly="True"
										                    CellStyleClasses="Centered" >
										</DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

		    <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Height="40"
		            BorderThickness="1" BorderBrush="#222222" 
		            Margin="0,-1,0,0">
						<Grid ColumnDefinitions="Auto,Auto,Auto,Auto,*">
								<TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"
													 Margin="10,0,0,0">
										Update position continuously
								</TextBlock>
								<ToggleSwitch Grid.Column="1" Name="UpdateContinuouslySwitch"  HorizontalAlignment="Left"
								              OffContent="Off" OnContent="On" IsChecked="False"
								              Margin="10,0,0,0"/>
                            
								<TextBox Grid.Column="2" Name="UpdateRateTextBox" HorizontalAlignment="Left"
								         Height="30"
								         Margin="35,0,0,0" />
								<TextBlock Grid.Column="3" Text="ms (update rate)"
								           VerticalAlignment="Center" HorizontalAlignment="Left"
								           Margin="10,0,0,0"/>

								<Button Grid.Column="4" Name="UpdateButton" HorizontalAlignment="Right"
								        HorizontalContentAlignment="Stretch"
								        Margin="0,0,5,0"
								        Height="30">
										Send position update
								</Button>
						</Grid>
		    </Border>

		    <Grid Grid.Row="2" Grid.Column="1"
		          RowDefinitions="*,*,*" ColumnDefinitions="*,*"
		          Margin="0,10,0,10">

						<Button Grid.Row="1" Grid.Column="0"
			            HorizontalAlignment="Stretch">
					    Set min position
				    </Button>

				    <Button Grid.Row="2" Grid.Column="0"
				            HorizontalAlignment="Stretch">
					    Set max position
				    </Button>

				    <Button Grid.Row="1" Grid.Column="1"
				            HorizontalAlignment="Stretch">
					    Go to min position
				    </Button>

				    <Button Grid.Row="2" Grid.Column="1"
				            HorizontalAlignment="Stretch">
					    Go to max position
				    </Button>
		    </Grid>
        <!-- TODO add calibration tips and procedure in TextBlocks -->
    </Grid>
</reactiveUi:ReactiveUserControl>